// place in genmaze
// this.maze = []
// Justin
// p=eyJ4IjoxLCJ5IjowLCJneCI6NiwiZ3kiOjd9
// const maze = [
//   [1, 9],
//   [9, 17],
//   [17, 18],
//   [18, 26],
//   [26, 27],
//   [27, 28],
//   [28, 29],

//   // middle route
//   [29, 21],
//   [21, 13],
//   [13, 12],

//   [29, 30],
//   [30, 38],
//   [38, 46],
//   [46, 54],
//   [54, 62],
// ]

// Nemo
// p=eyJ4IjowLCJ5IjowLCJneCI6NywiZ3kiOjd9
// const maze = [
//   [0, 8],
//   [8, 9],

//   // side 1
//   [9, 10],
//   [10, 2],
//   // horiz 1
//   [2, 3],
//   [3, 4],
//   [4, 5],
//   [5, 6],
//   [6, 7],
//   // vert 1
//   [6, 14],
//   [14, 22],
//   [22, 30],
//   [30, 38],
//   [38, 46],

//   // vert 1 sides
//   [22, 21],
//   [22, 23],
//   [38, 39],
//   [38, 37],
//   [37, 36],
//   [36, 44],

//   // vert 2
//   [4, 12],
//   [12, 20],
//   [20, 28],
//   [28, 29],
//   [28, 27],
//   [27, 35],

//   [9, 17],
//   [17, 25],
//   [25, 33],
//   [33, 34], // side trap
//   [33, 41],
//   [41, 40], // side trap
//   [41, 42],
//   [42, 43],
//   [43, 44],
//   [44, 52],
//   [52, 51],
//   [51, 59],
//   [59, 60],
//   [60, 61],
//   [61, 53],
//   [53, 54],
//   [54, 55],
//   [55, 47], // top trap
//   [55, 63],

//   // last side corridor
//   [59, 58],
//   [58, 57],
//   [57, 56],
//   [56, 48],
//   [57, 49],
// ]

// // reflect
// maze.forEach(([a, b]) => {
//   this.maze.push([a, b], [b, a])
// })

